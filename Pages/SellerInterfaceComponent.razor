@page "/sprzedaż"
@attribute [Authorize(Policy ="SellerOnly")]
@if (!string.IsNullOrWhiteSpace(sellerName))
{
    <div class="row">
        <div class="col-7"><h3>Sprzedaj wybrane towary</h3></div>
        <div class="col-2"> <label for="seller"> Nazwa sprzedającego:</label></div>
        <div class="col-3">
            <div class="form-group">
                <input type="text" id="seller" class="form-control" @bind-value="sellerName" />
            </div>
        </div>
    </div>


    <br />

    <br />
    <div class="row">
        <div class="col-4">
            <SelectProductToSellComponent OnProductSelected="SelectProduct"></SelectProductToSellComponent>
            <br />
            <SellProductComponent SellerName="@sellerName" SelectedProduct="selectedProduct" OnProductSold="SellProduct"></SellProductComponent>
        </div>
        <div class="col">
            <TodayTransactionsListComponent @ref="transactionListComponent"></TodayTransactionsListComponent>
        </div>
    </div>
}
@code {
    private TodayTransactionsListComponent transactionListComponent;
    private Product selectedProduct;
    private string sellerName;
    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }
    private AuthenticationState authState;
    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        sellerName = authState.User.Identity.Name;
    }
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if(firstRender)
        {
            transactionListComponent.LoadTransactions(sellerName);
        }
    }
    private void SelectProduct(Product product)
    {
        selectedProduct = product;
    }
    private void SellProduct(Product product)
    {
        transactionListComponent.LoadTransactions(sellerName);
    }

}
